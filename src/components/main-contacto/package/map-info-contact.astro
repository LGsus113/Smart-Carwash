---
// El elento de carga es el slot, tomar치 ese elemento para evaluar cuando ya haya cargado, si este carga hace el resto de la animaci칩n.
// Para que el elemento de carga sea reconocido, necesita obligatoriamente que se le agregue el atributo data. Para este caso especifico a sido utilizado "data-load-target".
// En todo elemento que se pase a este componente para hacer uso de la animaci칩n debe tener el elemento de carga, sino aplicar script que le otorgue la carga y usar el atributo data ya mencionado para que lo reconozca y haga la animaci칩n.

import ShadowInnerImage from "@src/components/comun/shadow-inner-image.astro";
import Container from "@src/components/comun/contener-div.astro";

const ClassSpan =
  "relative top-3 text-primary text-5xl inline-block span-shadow-animation";
---

<Container class="relative overflow-hidden rounded-xl">
  <div
    data-target-id
    class="absolute inset-0 flex items-center justify-center bg-gray-200 z-10"
  >
    <h1 class="padre-span font-bungee">
      <span class={ClassSpan}>S</span>
      <span class={ClassSpan}>M</span>
      <span class={ClassSpan}>A</span>
      <span class={ClassSpan}>R</span>
      <span class={ClassSpan}>T</span>
      <span class={ClassSpan}>.</span>
      <span class={ClassSpan}>.</span>
      <span class={ClassSpan}>.</span>
    </h1>
  </div>

  <slot />

  <ShadowInnerImage />
</Container>

<script>
  import { $ } from "@src/utils/dom-selector";

  document.addEventListener("DOMContentLoaded", () => {
    const load_element = $("[data-load-target]");
    const load_animated = $("[data-target-id]");

    if (load_element && load_animated) {
      load_element.addEventListener("load", () => {
        load_animated.style.opacity = "0";
        load_animated.style.display = "none";
      });
    }
  });
</script>

<style>
  .span-shadow-animation {
    animation: bounce 0.4s ease infinite alternate;
  }

  .padre-span span:nth-child(2) {
    animation-delay: 0.1s;
  }
  .padre-span span:nth-child(3) {
    animation-delay: 0.2s;
  }
  .padre-span span:nth-child(4) {
    animation-delay: 0.3s;
  }
  .padre-span span:nth-child(5) {
    animation-delay: 0.4s;
  }
  .padre-span span:nth-child(6) {
    animation-delay: 0.5s;
  }
  .padre-span span:nth-child(7) {
    animation-delay: 0.6s;
  }
  .padre-span span:nth-child(8) {
    animation-delay: 0.7s;
  }

  [data-target-id] {
    transition:
      opacity 0.3s ease,
      display 0.3s ease allow-discrete;
  }
</style>

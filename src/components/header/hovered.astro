---
interface Props {
  items: string;
  container: string;
}

const { items, container } = Astro.props;
---

<div
  data-items={items}
  data-container={container}
  class="hover-menu absolute bg-primary backdrop-blur-sm rounded-md left-[var(--left)] top-[var(--top)] w-[var(--width)] h-[var(--height)] transition-all duration-200 ease-in-out opacity-0 -z-10 shadow-inner shadow-white/90"
>
</div>

<script>
  import { $, $$ } from "@src/utils/dom-selector";

  const handleMouseEnter = (
    menu: HTMLElement,
    header: HTMLElement,
    item: HTMLElement
  ) => {
    const rect = item.getBoundingClientRect();
    const headerRect = header.getBoundingClientRect();

    const left = rect.left - headerRect.left;
    const top = rect.top - headerRect.top;

    menu.style.setProperty("--left", `${left}px`);
    menu.style.setProperty("--top", `${top}px`);
    menu.style.setProperty("--width", `${rect.width}px`);
    menu.style.setProperty("--height", `${rect.height}px`);

    menu.style.opacity = "1";
    menu.style.visibility = "visible";
  };

  const handleMouseLeave = (menu: HTMLElement) => {
    menu.style.opacity = "0";
    menu.style.visibility = "hidden";
  };

  function hoveredGlobal() {
    const menus = $$(".hover-menu");
    if (!menus) return;

    menus.forEach((menu) => {
      const { items: itemsSelector, container: containerSelector } =
        menu.dataset;

      if (!itemsSelector || !containerSelector) return;

      const listItem = $$(itemsSelector);
      const header = $(containerSelector);

      if (!header || listItem.length === 0) return;

      listItem.forEach((item) => {
        item.addEventListener("mouseenter", () =>
          handleMouseEnter(menu, header, item)
        );
        item.addEventListener("mouseleave", () => handleMouseLeave(menu));
      });
    });
  }

  document.addEventListener("DOMContentLoaded", hoveredGlobal);
</script>
